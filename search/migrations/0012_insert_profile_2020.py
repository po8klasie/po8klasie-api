# Generated by Django 3.0.7 on 2020-08-23 10:17

from django.db import migrations
import csv
import re

from psycopg2.extras import NumericRange

from search.models import SubjectName, LanguageName


def load(apps, schema_editor):
    School = apps.get_model("search", "School")
    HighSchoolClass = apps.get_model("search", "HighSchoolClass")
    ExtendedSubject = apps.get_model("search", "ExtendedSubject")
    Language = apps.get_model("search", "Language")

    with open("csvs/publiczne_oddzialy_2020.csv", newline="") as csv_file:
        csv_reader = csv.reader(csv_file, delimiter=";")
        for n, row in enumerate(csv_reader):
            if n > 0:
                regon = row[7].zfill(9)
                school = School.objects.filter(public_institution_data__regon=regon)
                if (
                    not school.exists()
                    or school.get().school_type != "liceum ogólnokształcące"
                ):
                    continue
                school = school.get()
                class_name = row[1]
                type = {
                    "ogólnodostępny": "O",
                    "mistrzostwa sportowego": "MS",
                    "dwujęzyczny": "D",
                    "międzynarodowy": "M",
                    "wstępny": "DW",
                    "sportowy": "S",
                    "integracyjny cz. ogólnodostępna": "I-o",
                    "integracyjny cz. dla kandydatów z orzeczeniem o potrzebie kształcenia specjalnego": "I-i",
                    "przygotowania wojskowego": "PW",
                }.get(row[35], "")
                hsc = HighSchoolClass(
                    type=type,
                    name=class_name,
                    school=school,
                    year=NumericRange(2020, 2022, "[)"),
                )
                hsc.save()
                subject_list = [v for v in row[3].split(",") if v]
                subject_names = {
                    val: key
                    for (key, val) in SubjectName.choices + LanguageName.choices
                }
                for subject in subject_list:
                    subject = subject.strip()
                    name = subject_names[subject]
                    es = ExtendedSubject(name=name, high_school_class=hsc)
                    es.save()

                languages = list(
                    re.search(
                        "\\((([A-z]+\\*?)(?:,([A-z]+\\*?))*)-([A-z]+\\*?)(?:,([A-z]+\\*?))*\\)",
                        row[2],
                    ).groups()
                )
                for i, lan in enumerate(languages[1:]):
                    if not lan:
                        continue
                    is_multiple_levels = lan.endswith("*")
                    is_bilingual = hsc.type == "D" and i == 0
                    lan = lan.replace("*", "")
                    nr = 1 if lan in languages[0] else 2
                    lang = Language(
                        high_school_class=hsc,
                        name=lan,
                        multiple_levels=is_multiple_levels,
                        is_bilingual=is_bilingual,
                        nr=nr,
                    )
                    lang.save()


def reverse(apps, schema_editor):
    HighSchoolClass = apps.get_model("search", "HighSchoolClass")
    HighSchoolClass.objects.filter(year=(2020, 2022)).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0011_swap_long_and_lat"),
    ]

    operations = [migrations.RunPython(load, reverse)]
